<#-- export-csv.ftl -->

<#setting locale="en_US">

<#-- Quote a value for CSV and RETURN it as a string -->
<#function csv v>
  <#local s = (v!'')?string>
  <#if s?contains(",") || s?contains('"') || s?contains('\n')>
    <#return '"' + s?replace('"','""') + '"' >
  <#else>
    <#return s>
  </#if>
</#function>

<#-- Build ONE CSV row string (values joined by commas, CRLF at end) -->
<#function row values>
  <#local parts = []>
  <#list values as x>
    <#local parts = parts + [ csv(x) ]>
  </#list>
  <#return parts?join(",") + "\r\n">
</#function>

<#-- Render a Returns section (Cumulative or Annualized) -->
<#macro returnsSection sectionTitle subLabel rows benchRows>
  ${ row([ sectionTitle ]) }<#t>

  ${ row([ "Section", "Time Period", "Rate of Return" ]) }<#t>
  ${ row([ "Filter", (filterType!'')?string, (rateOfReturn!'')?string ]) }<#t>

  ${ row([
    "Section","Sub-Section","Account#","MTD","QTD","YTD",
    "1-Year","3-Year","5-Year","10-Year","Since Inception","Inception Date"
  ]) }<#t>

  <#-- Account rows -->
  <#list rows![] as metric>
    <#-- inceptionDate normalize -->
    <#assign incRaw = metric.inceptionDate!"" />
    <#if incRaw?has_content && incRaw != "--" && incRaw?matches("^[0-3]?\\d-[A-Za-z]{3}-\\d{4}$")>
      <#assign incOut = (incRaw?date("dd-MMM-yyyy"))?string("yyyy-MM-dd") />
    <#else>
      <#assign incOut = "" />
    </#if>

    ${ row([
      "Returns",
      subLabel,
      (metric.accountName?has_content) ? metric.accountName : (metric.accountNumber!''),
      metric.oneMonth!'',      /* MTD */
      metric.threeMonth!'',    /* QTD (placeholder until real QTD exists) */
      metric.ytd!'',
      metric.oneYear!'',
      metric.threeYear!'',
      metric.fiveYear!'',
      metric.tenYear!'',
      metric.sinceInception!'',
      incOut
    ]) }<#t>
  </#list>

  <#-- Benchmark rows (optional) -->
  <#if benchRows?has_content>
    ${ row([ "Benchmarks" ]) }<#t>
    ${ row([
      "Section","Sub-Section","Benchmark Name","MTD","QTD","YTD",
      "1-Year","3-Year","5-Year","10-Year","Since Inception","Inception Date"
    ]) }<#t>

    <#list benchRows as b>
      <#assign bincRaw = b.inceptionDate!"" />
      <#if bincRaw?has_content && bincRaw != "--" && bincRaw?matches("^[0-3]?\\d-[A-Za-z]{3}-\\d{4}$")>
        <#assign bincOut = (bincRaw?date("dd-MMM-yyyy"))?string("yyyy-MM-dd") />
      <#else>
        <#assign bincOut = "" />
      </#if>

      ${ row([
        "Returns",
        subLabel,
        b.benchmarkName!'',
        b.oneMonth!'',
        b.threeMonth!'',
        b.ytd!'',
        b.oneYear!'',
        b.threeYear!'',
        b.fiveYear!'',
        b.tenYear!'',
        b.sinceInception!'',
        bincOut
      ]) }<#t>
    </#list>
  </#if>
</#macro>

<#-- ================= SECTIONS ================= -->

<#-- Returns - Cumulative -->
<@returnsSection
  sectionTitle = "Returns - Cumulative"
  subLabel     = "Cumulative"
  rows         = accountMetrics![]
  benchRows    = benchmarkMetrics![]
/>

<#-- Returns - Annualized -->
<@returnsSection
  sectionTitle = "Returns - Annualized"
  subLabel     = "Annualized"
  rows         = accountAnnualizedMetrics![]
  benchRows    = benchmarkAnnualizedMetrics![]
/>
