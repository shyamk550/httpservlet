<#ftl strip_whitespace=true>
<#-- Historical Returns CSV (pipe-delimited, single-column) -->
<#compress>

<#-- -------------------- Helpers -------------------- -->

<#-- Decode a few common HTML entities in labels -->
<#function _decode s>
  <#if !s?has_content><#return s /></#if>
  <#local t = s?string>
  <#local t = t?replace("&amp;","&")?replace("&lt;","<")?replace("&gt;",">")
                 ?replace("&quot;","\"")?replace("&#39;","'")>
  <#return t>
</#function>

<#-- Cell rendering: default to "--" when value is blank/null -->
<#function cell v>
  <#local s = (v!'')?string>
  <#if !s?has_content><#return "--" /></#if>
  <#return s>
</#function>

<#-- Join an array with pipes -->
<#function joinPipe values>
  <#local out = "">
  <#list values as v>
    <#if v_index == 0>
      <#local out = cell(v)>
    <#else>
      <#local out = out + "|" + cell(v)>
    </#if>
  </#list>
  <#return out>
</#function>

<#-- Emit one CSV "row" (as single pipe-delimited string + CRLF).
     If values is empty, emits just a blank line. -->
<#function makeRow values>
  <#if !values?? || values?size == 0>
    <#return "\r\n">
  </#if>
  <#return joinPipe(values) + "\r\n">
</#function>

<#-- Map block index to fallback sub label when periodType is missing -->
<#function fallbackSubLabel idx>
  <#if idx == 0>
    <#return "Monthly">
  <#elseif idx == 1>
    <#return "Quarterly">
  <#else>
    <#return "Yearly">
  </#if>
</#function>

<#-- --------------- Main: Historical Returns --------------- -->

<#list historicalReturnsData![] as br>

  <#-- Sub-Section label (Monthly / Quarterly / Yearly) -->
  <#assign subLabel =
      (br.periodType?? && br.periodType?has_content)
      ? br.periodType
      : fallbackSubLabel(br_index) >

  <#-- Build header -->
  <#assign header = [
      "Section","Sub-Section","Account","Timeframe",
      "RATE OF RETURN (NET OF FEES)","RATE OF RETURN (GROSS OF FEES)"
  ]>

  <#-- Append ALL benchmark names (string or object with bName) -->
  <#list benchmarkNames![] as bn>
    <#assign label =
      (bn?is_hash && bn.bName??) ? _decode(bn.bName) : _decode(bn) >
    <#assign header = header + [ label ]>
  </#list>

  ${makeRow(header)}

  <#-- Data rows -->
  <#list br.rowData![] as row>
    <#assign vals = [
      "Historical Returns",
      subLabel,
      row.accountNumber!'',
      row.effectiveDate!'',
      row.netOfFees!'',
      row.grossOfFees!''
    ]>

    <#-- Append all benchmarkN values corresponding to benchmarkNames -->
    <#list 0..(benchmarkNames!?size - 1) as i>
      <#assign vals = vals + [ row['benchmark' + i]!'' ]>
    </#list>

    ${makeRow(vals)}
  </#list>

  <#-- One blank line between blocks -->
  ${makeRow([])}

</#list>

</#compress>
